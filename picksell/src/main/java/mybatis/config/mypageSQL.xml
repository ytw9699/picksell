<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage"> 
	
<select id="userInfo" parameterType="String" resultType="hashmap">
		select * from PS_MEMBER WHERE ID = #{sessionId}
</select>

<update id="updateBusiness" parameterType="hashmap">
		update PS_MEMBER set 
		password = #{password},
		email = #{email},
		address = #{address},
		account = #{account},
		account_name = #{account_name},
		bank = #{bank},
		profile_img = #{profile_img},
		alarm_consent = #{alarm_consent},
		business_number = #{business_number},
		business_name = #{business_name}
		where id = #{id}
</update>	

<update id="updatePersonal" parameterType="hashmap">
		update PS_MEMBER set 
		password = #{password},
		email = #{email},
		address = #{address},
		account = #{account},
		account_name = #{account_name},
		bank = #{bank},
		profile_img = #{profile_img},
		alarm_consent = #{alarm_consent}
		where id = #{id}
</update>	

		<!-- 판매관리 리스트 -->
<select id="sellList" resultType="hashmap" parameterType="hashmap">
		<if test='HowToSell == "3" '>
		<!-- 전체 상품 보기 -->
		select * from ps_product where HowToSell != '3'  and seller_id = #{sessionId}
		
			<choose>
			<!-- 모든 상품/판매중상품/거래중상품/판매완료상품 나누기 -->
				<when test='deal_status == "3" '>
				and deal_status != '3'
				</when>
				<when test='deal_status == "2" '>
				and deal_status = '2'
				</when>
				<when test='deal_status == "1" '>
				and deal_status = '1'
				</when>
				<when test='deal_status == "0" '>
				and deal_status = '0'
				</when>
			</choose>
			order by PRODUCT_REGDATE desc
		</if>
		
		<if test='HowToSell != "3" '>
		 <!-- 일반 안전 상품/ 일반 안전 상품+직거래/ 픽셀플러스 상품/나누기 -->
		select * from ps_product where howtosell = #{HowToSell}  and seller_id = #{sessionId} 
			<!-- 모든 상품/판매중상품/거래중상품/판매완료상품 나누기 -->
			<choose>
				<when test='deal_status == "3" '>
				and deal_status != '3'
				</when>
				<when test='deal_status == "2" '>
				and deal_status = '2'
				</when>
				<when test='deal_status == "1" '>
				and deal_status = '1'
				</when>
				<when test='deal_status == "0" '>
				and deal_status = '0'
				</when>
			</choose>
			order by PRODUCT_REGDATE desc
		</if>
	</select>

<select id="purchaseList" resultType="hashmap" parameterType="String">
	
	select a.seller_id, a.subject, a.first_img, a.price, a.category_num, b.purchase_num, b.product_num, b.buyer_id, b.regdate,
 b.status
   from(select seller_id, subject, first_img, price, category_num, product_num  from ps_product)a, 
ps_purchase_list b where a.product_num = b.product_num and b.buyer_id = #{sessionId} order by b.regdate desc
      
</select>

<select id="deletePurchaseList" parameterType="int">
	<!-- 구매리스트에서 구매신청번호에 해당하는거 한줄 삭제 -->
	delete from ps_purchase_list where purchase_num = #{purchase_num}
	
</select>

<!-- ps_order에서  리스트  반환-->
<select id="saleList" resultType="hashmap" parameterType="hashmap">

<if test='status == "5" '>
	<!-- 전체 상품 보기 -->
	<!-- select a.order_num, a.status, a.step1_date from ps_order a, ps_orderlist b 
	where b.seller_id = #{sessionId} and a.order_num = b.order_num and a.status != 5
	group by a.order_num, a.status, a.step1_date order by a.step1_date desc
	 위와 아래는 같은거 아래꺼를 쓰자-->
	select distinct a.status, b.order_num, a.step1_date from ps_order a, ps_orderlist b 
	where b.seller_id = #{sessionId} and a.order_num = b.order_num and a.status != 5 order by a.step1_date desc
</if>

<if test='status != "5" '>
	select distinct a.status, b.order_num, a.step1_date from ps_order a, ps_orderlist b 
	where b.seller_id = #{sessionId} and a.order_num = b.order_num and a.status = #{status} order by a.step1_date desc
</if>

</select>
<!-- PS_ORDERLIST + ps_product+ps_order 조인해서 리스트 반환-->
<select id="saleSubList" resultType="hashmap" parameterType="hashmap">

select * from ps_orderlist a, ps_product b, ps_order c
where a.seller_id = #{sessionId} and a.order_num = #{ORDER_NUM} and a.product_num = b.product_num and a.order_num = c.order_num and

<if test='status == "5" '>
c.status != '5'
</if>

<if test='status != "5" '>
c.status = #{status} 
</if>


</select>
<!-- ps_order에서  리스트  반환-->
<select id="orderList" resultType="hashmap" parameterType="hashmap">

<if test='status == "5" '>
		<!-- 전체 상품 보기 -->
		 select * from ps_order where buyer_id = #{sessionId} and status != '5' order by step1_date desc
</if>
<if test='status != "5" '>
		<!-- 전체 상품 보기 -->
		 select * from ps_order where buyer_id = #{sessionId} and status = #{status} order by step1_date desc
</if>
	
</select>

<!-- PS_ORDERLIST + ps_product+ps_order 조인해서 리스트 반환-->
<select id="orderSubList" resultType="hashmap" parameterType="hashmap">

select b.PRICE, b.SUBJECT, b.FIRST_IMG, b.category_num, b.product_num, a.ORDER_NUM, a.ORDER_QUANTITY
from(select * from PS_ORDERLIST)a, ps_product b, ps_order c where a.ORDER_NUM = #{ORDER_NUM} and a.product_num = b.product_num and c.order_num = a.order_num and

<if test='status == "5" '>
c.status != '5' 
</if>

<if test='status != "5" '>
c.status = #{status} 
</if>

</select>

<!-- 주문조회 상세보기 -->	
<select id="orderDetail" parameterType="Integer" resultType="hashmap">

select * from ps_order where ORDER_NUM = #{order_num}

</select>
<!-- 판매조회 상세보기 -->	
<select id="saleDetail" parameterType="Integer" resultType="hashmap">

select * from ps_order where ORDER_NUM = #{order_num}

</select>
<!-- 판매조회 상세보기 안에 관련 상품글 리스트 -->
<select id="saleSubDetail" parameterType="hashmap" resultType="hashmap">

select * from ps_product a, PS_ORDERLIST b where b.ORDER_NUM = #{ORDER_NUM} and b.PRODUCT_NUM = a.PRODUCT_NUM and b.SELLER_ID = #{sessionId}

</select>
<!-- 주문조회 상세보기 안에 관련 상품글 리스트 -->
<select id="orderSubDetail" parameterType="Integer" resultType="hashmap">

select * from ps_product a, PS_ORDERLIST b where b.ORDER_NUM = #{order_num} and b.PRODUCT_NUM = a.PRODUCT_NUM

</select>

<select id="userCheck" parameterType="String" resultType="String">
			SELECT password FROM PS_MEMBER WHERE ID = #{ID}
</select>

<update id="stock" parameterType="String">
		update PS_PRODUCT set stock = stock+1 where PRODUCT_NUM = #{PRODUCT_NUM}
</update>




</mapper>
